{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}},"post_list":[{"title":"136只出现一次的数字 LeetCode","uid":"35c279d773f512ff2cf029127b15b0e0","slug":"136只出现一次的数字","date":"2021-05-05T12:27:25.000Z","updated":"2021-05-06T08:08:15.114Z","comments":true,"path":"api/articles/136只出现一次的数字.json","keywords":null,"cover":"/images/banners/VCG41186545379.jpg","text":"题目：给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。 说明： 你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？ 示例 1: 输入: [2,2,1]输出: 1示例 2: 输入: [4,1,2,1,2]输出: 4...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"异或","slug":"异或","count":1,"path":"api/tags/异或.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"feature":true},{"title":"237删除链表中的节点 leetCode","uid":"be827bd3744cf66f970afc1974c2f8ba","slug":"237删除链表中的节点","date":"2021-05-05T12:03:58.000Z","updated":"2021-05-06T08:08:32.208Z","comments":true,"path":"api/articles/237删除链表中的节点.json","keywords":null,"cover":"/images/banners/VCG41N1126025444.jpg","text":"题目：请编写一个函数，使其可以删除某个链表中给定的（非末尾）节点。传入函数的唯一参数为 要被删除的节点 。这个题一开始，我也有点懞，被这个题目弄傻了。后面看了下题解，豁然开朗。 主要思路 将下一个节点的值赋值给当前节点 然后把下一个节点删除即可（删除方法：将当前节点next指向下...","link":"","photos":[],"count_time":{"symbolsCount":398,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"链表","slug":"链表","count":1,"path":"api/tags/链表.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"feature":true},{"title":"Django","uid":"9319bb79084ec16cc2b86c7f0a8d2c6a","slug":"Django","date":"2021-05-05T06:39:18.000Z","updated":"2021-05-05T07:48:50.956Z","comments":true,"path":"api/articles/Django.json","keywords":null,"cover":"/images/banners/VCG41N1158547769.jpg","text":"Django程序开机自动启动 通过shell脚本，设置开机自动启动Django的uwsgi服务（测试环境Cento8） 1、切换到/etc/init.d/，目录下创建一个自己的脚本2、制作sh脚本 vim start_uwsgi注意，注释也要加进去 #!/bin/sh #add ...","link":"","photos":[],"count_time":{"symbolsCount":901,"symbolsTime":"1 mins."},"categories":[{"name":"Django","slug":"Django","count":1,"path":"api/categories/Django.json"}],"tags":[{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"Django","slug":"Django","count":1,"path":"api/tags/Django.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"feature":true},{"title":"nginx","uid":"5657dbaafc65d44bb7226a49ee6df3c8","slug":"nginx","date":"2021-05-05T04:39:04.000Z","updated":"2021-05-05T07:47:34.169Z","comments":true,"path":"api/articles/nginx.json","keywords":null,"cover":"/images/banners/VCG41183545763.jpg","text":"设置开机自动启动 nginx开机自动启动(Centos8测试环境) 1、init.d下创建文件nginxvim /etc/init.d/nginx nginx官方文档 2、将官方配置，添加到编辑的文件中：nginx=”/usr/local/nginx/sbin/nginx” //...","link":"","photos":[],"count_time":{"symbolsCount":580,"symbolsTime":"1 mins."},"categories":[{"name":"Nginx","slug":"Nginx","count":1,"path":"api/categories/Nginx.json"}],"tags":[{"name":"Nginx","slug":"Nginx","count":1,"path":"api/tags/Nginx.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}},{"title":"整数反转 leetCode 7","uid":"b0332e478f2510b18d9d570091b0d2de","slug":"7整数反转","date":"2021-05-03T16:27:50.000Z","updated":"2021-05-05T07:45:15.675Z","comments":true,"path":"api/articles/7整数反转.json","keywords":null,"cover":"/images/banners/VCG211263245974.jpg","text":"给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。如果反转后整数超过 32 位的有符号整数的范围 [−231, 231 − 1] ，就返回 0。假设环境不允许存储 64 位整数（有符号或无符号） 1、解法1，未优化写法 40ms思路： 展开我的思路 （1...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}},{"title":"两数之和 leetCode 1","uid":"b529ed6ebbafadec850827aed7fed9b6","slug":"两数之和","date":"2021-05-03T11:55:20.000Z","updated":"2021-05-05T07:45:28.392Z","comments":true,"path":"api/articles/两数之和.json","keywords":null,"cover":"/images/banners/VCG41154059609.jpg","text":"题目：给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。你可以按任意顺序返回答案 示例 1： 输入：nums = [2...","link":"","photos":[],"count_time":{"symbolsCount":691,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"Hash","slug":"Hash","count":2,"path":"api/tags/Hash.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}},{"title":"砖墙问题 leetCode 554","uid":"5234a8c4e062136329f4963c94cde8ba","slug":"砖墙问题","date":"2021-05-03T06:22:29.000Z","updated":"2021-05-05T07:00:29.365Z","comments":true,"path":"api/articles/砖墙问题.json","keywords":null,"cover":"/images/banners/VCG41N1070447322.jpg","text":"题目：你的面前有一堵矩形的、由 n 行砖块组成的砖墙。这些砖块高度相同（也就是一个单位高）但是宽度不同。每一行砖块的宽度之和应该相等。 你现在要画一条 自顶向下 的、穿过 最少 砖块的垂线。如果你画的线只是从砖块的边缘经过，就不算穿过这块砖。你不能沿着墙的两个垂直边缘之一画线，这...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":5,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":5,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":6,"path":"api/tags/Python.json"},{"name":"Hash","slug":"Hash","count":2,"path":"api/tags/Hash.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}},{"title":"vim操作宝典","uid":"901b553f2ebc4e976cd70013f9320085","slug":"vim操作宝典","date":"2021-05-01T12:41:12.000Z","updated":"2021-05-05T07:53:02.058Z","comments":true,"path":"api/articles/vim操作宝典.json","keywords":null,"cover":"/images/banners/VCG21gic18180994.jpg","text":"在行尾插入视图模式：a 键 Vim显示文件已经打开非正常退出，就会产生.swp文件，可以把他删除 rm -rf .文件名.swp 复制多行数字键加yy 例：复制4行 4yy 在行上方或者下方插入两个都是字母 o：在下方 O：在上方 合并两行视图模式：J 多行注释（1）首先按键盘上...","link":"","photos":[],"count_time":{"symbolsCount":380,"symbolsTime":"1 mins."},"categories":[{"name":"Vim","slug":"Vim","count":1,"path":"api/categories/Vim.json"}],"tags":[{"name":"Linux","slug":"Linux","count":3,"path":"api/tags/Linux.json"},{"name":"Vim","slug":"Vim","count":1,"path":"api/tags/Vim.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}},{"title":"linux操作宝典","uid":"83638110e00c80fbf85ca941956c7a6d","slug":"linux","date":"2021-04-29T06:33:15.000Z","updated":"2021-05-05T07:44:23.145Z","comments":true,"path":"api/articles/linux.json","keywords":null,"cover":"/images/banners/VCG211284641681.jpg","text":"按内容搜索所有文件grep -rn &quot;hello,world!&quot; * * 表示当前目录所有文件，也可以是某个文件名 -r 是递归查找 -n 是显示行号 -R 查找所有文件包含子目录 -i 忽略大小写 -l 只列出匹配的文件名 -L 列出不匹配的文件名 -w 只...","link":"","photos":[],"count_time":{"symbolsCount":477,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":1,"path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":3,"path":"api/tags/Linux.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}},{"title":"shell脚本","uid":"9a2252c0b559cb77f268bff5416cc06f","slug":"shell脚本","date":"2021-04-25T03:42:36.000Z","updated":"2021-05-05T04:17:37.384Z","comments":true,"path":"api/articles/shell脚本.json","keywords":null,"cover":"/images/banners/VCG41N1169192820.jpg","text":"清屏clear 输出换行，两个echo -e \"\\n\\n\" 休息一秒sleep 1 输出用户数who | awk '&#123;print $1&#125;' | sort | uniq | wc -l 让计算机发出蜂鸣声echo -en \"\\007\" 判断文件夹是否存在if [...","link":"","photos":[],"count_time":{"symbolsCount":544,"symbolsTime":"1 mins."},"categories":[{"name":"Shell","slug":"Shell","count":1,"path":"api/categories/Shell.json"}],"tags":[{"name":"Linux","slug":"Linux","count":3,"path":"api/tags/Linux.json"},{"name":"Shell","slug":"Shell","count":1,"path":"api/tags/Shell.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}}],"categories":6,"tags":22,"word_count":"8.5k","post_count":10}