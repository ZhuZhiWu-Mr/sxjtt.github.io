{"title":"蒙特卡洛树搜索MCTS","uid":"e4486b46c423239be00f208745edcc94","slug":"蒙特卡洛树搜索","date":"2021-08-03T02:56:38.000Z","updated":"2021-08-03T03:35:57.812Z","comments":true,"path":"api/articles/蒙特卡洛树搜索.json","keywords":null,"cover":"/images/banners/VCG41N1070447322.jpg","content":"<h2 id=\"1、蒙特卡洛树搜索（The-Monte-Carlo-Tree-Search）\"><a href=\"#1、蒙特卡洛树搜索（The-Monte-Carlo-Tree-Search）\" class=\"headerlink\" title=\"1、蒙特卡洛树搜索（The Monte Carlo Tree Search）\"></a>1、蒙特卡洛树搜索（The Monte Carlo Tree Search）</h2><ul>\n<li>蒙特卡罗树搜索是一类树搜索算法的统称，简称MCTS。它是一种用于某些决策过程的启发搜索算法，且在搜索空间巨大的游戏中会比较有效。</li>\n<li>从全局来看，蒙特卡洛树搜索的主要目标是：给定一个游戏状态来选择最佳的下一步。</li>\n<li>常见应用包括Alpha Go, 象棋或围棋AI程序等。。。</li>\n</ul>\n<h2 id=\"2、算法过程\"><a href=\"#2、算法过程\" class=\"headerlink\" title=\"2、算法过程\"></a>2、算法过程</h2><ul>\n<li><p>选择 （Seletion）:选择能够最大化UCB值的结点<br>  <img src=\"D:\\zhuzhiwu\\Develop\\WorkSpace\\projects\\gitPro\\ZhuBlogHexo\\source\\images\\questions\\image-20210803110228302.png\" alt=\"image-20210803110228302\"></p>\n</li>\n<li><p>扩展（Node Expansion）：创建一个或多个子结点</p>\n</li>\n<li><p>仿真（Simulation）：在某一结点用随机策略进行游戏，又称为playout或者rollout</p>\n</li>\n<li><p>反向传播（Backpropagation）：使用随机搜索的结果来更新整个搜索树</p>\n</li>\n</ul>\n<p><img src=\"D:\\zhuzhiwu\\Develop\\WorkSpace\\projects\\gitPro\\ZhuBlogHexo\\source\\images\\questions\\image-20210803111011048.png\" alt=\"image-20210803111011048\"></p>\n<h3 id=\"2-1-选择（Selection）\"><a href=\"#2-1-选择（Selection）\" class=\"headerlink\" title=\"2.1 选择（Selection）\"></a>2.1 选择（Selection）</h3><p><img src=\"D:\\zhuzhiwu\\Develop\\WorkSpace\\projects\\gitPro\\ZhuBlogHexo\\source\\images\\questions\\image-20210803112412722.png\" alt=\"image-20210803112412722\"></p>\n<p>Vi：该结点下的平均value大小</p>\n<p>C：常数，通常可以取2</p>\n<p>N：总探索次数</p>\n<p>ni：当前结点探索次数</p>\n<h3 id=\"2-2-扩展（Node-Expansion）\"><a href=\"#2-2-扩展（Node-Expansion）\" class=\"headerlink\" title=\"2.2 扩展（Node Expansion）\"></a>2.2 扩展（Node Expansion）</h3><p><img src=\"D:\\zhuzhiwu\\Develop\\WorkSpace\\projects\\gitPro\\ZhuBlogHexo\\source\\images\\questions\\image-20210803112909334.png\" alt=\"image-20210803112909334\"></p>\n<h3 id=\"2-3-仿真（Rollout）\"><a href=\"#2-3-仿真（Rollout）\" class=\"headerlink\" title=\"2.3 仿真（Rollout）\"></a>2.3 仿真（Rollout）</h3><p><img src=\"D:\\zhuzhiwu\\Develop\\WorkSpace\\projects\\gitPro\\ZhuBlogHexo\\source\\images\\questions\\image-20210803113031777.png\" alt=\"image-20210803113031777\"></p>\n<h3 id=\"2-4-反向传播（Backpropagation）\"><a href=\"#2-4-反向传播（Backpropagation）\" class=\"headerlink\" title=\"2.4 反向传播（Backpropagation）\"></a>2.4 反向传播（Backpropagation）</h3><p><img src=\"D:\\zhuzhiwu\\Develop\\WorkSpace\\projects\\gitPro\\ZhuBlogHexo\\source\\images\\questions\\image-20210803113333183.png\" alt=\"image-20210803113333183\"></p>\n<h2 id=\"3、算法何时终结\"><a href=\"#3、算法何时终结\" class=\"headerlink\" title=\"3、算法何时终结\"></a>3、算法何时终结</h2><ul>\n<li><p>游戏内棋手的限制时间</p>\n</li>\n<li><p>给定固定的迭代次数</p>\n<p>迭代完成后，选择value更大的结点即可完成决策</p>\n</li>\n</ul>\n","feature":true,"text":"1、蒙特卡洛树搜索（The Monte Carlo Tree Search） 蒙特卡罗树搜索是一类树搜索算法的统称，简称MCTS。它是一种用于某些决策过程的启发搜索算法，且在搜索空间巨大的游戏中会比较有效。 从全局来看，蒙特卡洛树搜索的主要目标是：给定一个游戏状态来选择最佳的下一...","link":"","photos":[],"count_time":{"symbolsCount":529,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":12,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":11,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":13,"path":"api/tags/Python.json"},{"name":"MCTS","slug":"MCTS","count":1,"path":"api/tags/MCTS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E6%A0%91%E6%90%9C%E7%B4%A2%EF%BC%88The-Monte-Carlo-Tree-Search%EF%BC%89\"><span class=\"toc-text\">1、蒙特卡洛树搜索（The Monte Carlo Tree Search）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E7%AE%97%E6%B3%95%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">2、算法过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E9%80%89%E6%8B%A9%EF%BC%88Selection%EF%BC%89\"><span class=\"toc-text\">2.1 选择（Selection）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E6%89%A9%E5%B1%95%EF%BC%88Node-Expansion%EF%BC%89\"><span class=\"toc-text\">2.2 扩展（Node Expansion）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E4%BB%BF%E7%9C%9F%EF%BC%88Rollout%EF%BC%89\"><span class=\"toc-text\">2.3 仿真（Rollout）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-4-%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%EF%BC%88Backpropagation%EF%BC%89\"><span class=\"toc-text\">2.4 反向传播（Backpropagation）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%AE%97%E6%B3%95%E4%BD%95%E6%97%B6%E7%BB%88%E7%BB%93\"><span class=\"toc-text\">3、算法何时终结</span></a></li></ol>","author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"Python多进程与多线程","uid":"b2c2bb855d265e670ce1f297fc82a024","slug":"Python多进程与多线程","date":"2021-06-24T04:40:25.000Z","updated":"2021-06-25T03:49:40.794Z","comments":true,"path":"api/articles/Python多进程与多线程.json","keywords":null,"cover":[],"text":"一、多进程1.1 进程的创建步骤 导入进程包 import multiprocessing 通过进程类创建进程对象 进程对象 = multiprocessing.Process() 启动进程执行任务 进程对象.start() 1.2 通过进程类创建进程对象进程对象 = multi...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"feature":true}}