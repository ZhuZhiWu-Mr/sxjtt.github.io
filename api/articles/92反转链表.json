{"title":"92反转链表","uid":"6b52f6e39f338d64bbb358fbefb34421","slug":"92反转链表","date":"2021-05-28T13:33:34.000Z","updated":"2021-08-10T06:41:53.505Z","comments":true,"path":"api/articles/92反转链表.json","keywords":null,"cover":"/images/banners/VCG211309273419.jpg","content":"<h2 id=\"给你单链表的头指针-head-和两个整数-left-和-right-，其中-left-lt-right-。请你反转从位置-left-到位置-right-的链表节点，返回-反转后的链表\"><a href=\"#给你单链表的头指针-head-和两个整数-left-和-right-，其中-left-lt-right-。请你反转从位置-left-到位置-right-的链表节点，返回-反转后的链表\" class=\"headerlink\" title=\"给你单链表的头指针 head 和两个整数 left 和 right ，其中 left &lt;= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表\"></a>给你单链表的头指针 head 和两个整数 left 和 right ，其中 left &lt;= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表</h2><p><img src=\"D:\\data\\projects\\gitPro\\ZhuBlogHexo\\source\\images\\questions\\image-20210528213456019.png\" alt=\"image-20210528213456016\"></p>\n<p>输入：head = [1,2,3,4,5], left = 2, right = 4<br>输出：[1,4,3,2,5]<br>示例 2：</p>\n<p>输入：head = [5], left = 1, right = 1<br>输出：[5]</p>\n<h2 id=\"解法1-穿针引线法\"><a href=\"#解法1-穿针引线法\" class=\"headerlink\" title=\"解法1 穿针引线法\"></a>解法1 穿针引线法</h2><p><img src=\"D:\\data\\projects\\gitPro\\ZhuBlogHexo\\source\\images\\questions\\image-20210528213624999.png\" alt=\"image-20210528213624999\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">reverseBetween</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">:</span> ListNode<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> ListNode<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">def</span> <span class=\"token function\">reverse_list_node</span><span class=\"token punctuation\">(</span>head<span class=\"token punctuation\">:</span> ListNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            cur <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n            pre <span class=\"token operator\">=</span> head\n            <span class=\"token keyword\">while</span> pre<span class=\"token punctuation\">:</span>\n                tmp_pre <span class=\"token operator\">=</span> pre<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n                pre<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> cur\n                cur <span class=\"token operator\">=</span> pre\n                pre <span class=\"token operator\">=</span> tmp_pre\n\n        <span class=\"token comment\"># pre  lft  rgt  succ</span>\n        vitural_node <span class=\"token operator\">=</span> ListNode<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">)</span>\n        pre <span class=\"token operator\">=</span> vitural_node\n        <span class=\"token comment\"># 1、pre走到left - 1 的前一个节点</span>\n        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            pre <span class=\"token operator\">=</span> pre<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n        \n        rgt <span class=\"token operator\">=</span> pre \n        <span class=\"token comment\"># 2、 从pre走到right 节点</span>\n        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>right <span class=\"token operator\">-</span> left <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            rgt <span class=\"token operator\">=</span> rgt<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n\n        lft <span class=\"token operator\">=</span> pre<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n        succ <span class=\"token operator\">=</span> rgt<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n        <span class=\"token comment\"># 3、截断lft 和rgt</span>\n        pre<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n        rgt<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n        <span class=\"token comment\"># 4、反转</span>\n        reverse_list_node<span class=\"token punctuation\">(</span>lft<span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 5、拼接</span>\n        pre<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> rgt\n        lft<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> succ\n        <span class=\"token keyword\">return</span> vitural_node<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"给你单链表的头指针 head 和两个整数 left 和 right ，其中 left &lt;= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 输入：head = [1,2,3,4,5], left = 2, right = 4输出：...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":15,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":14,"path":"api/tags/算法.json"},{"name":"Python - 链表","slug":"Python-链表","count":1,"path":"api/tags/Python-链表.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%99%E4%BD%A0%E5%8D%95%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%B4%E6%8C%87%E9%92%88-head-%E5%92%8C%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0-left-%E5%92%8C-right-%EF%BC%8C%E5%85%B6%E4%B8%AD-left-lt-right-%E3%80%82%E8%AF%B7%E4%BD%A0%E5%8F%8D%E8%BD%AC%E4%BB%8E%E4%BD%8D%E7%BD%AE-left-%E5%88%B0%E4%BD%8D%E7%BD%AE-right-%E7%9A%84%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9%EF%BC%8C%E8%BF%94%E5%9B%9E-%E5%8F%8D%E8%BD%AC%E5%90%8E%E7%9A%84%E9%93%BE%E8%A1%A8\"><span class=\"toc-text\">给你单链表的头指针 head 和两个整数 left 和 right ，其中 left &lt;&#x3D; right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%951-%E7%A9%BF%E9%92%88%E5%BC%95%E7%BA%BF%E6%B3%95\"><span class=\"toc-text\">解法1 穿针引线法</span></a></li></ol>","author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"mapped":true,"prev_post":{"title":"SpringBoot","uid":"af912e0d33a827f03582ef107fe8a87d","slug":"SpringBoot","date":"2021-05-31T03:42:36.000Z","updated":"2021-05-31T05:59:41.293Z","comments":true,"path":"api/articles/SpringBoot.json","keywords":null,"cover":"/images/banners/VCG41N1169192820.jpg","text":"[toc] Spring boot 2一、Boot入门SpringBoot2核心技术与响应式编程: https://www.yuque.com/atguigu/springboot 1、简介 简化Spring应用开发的一个框架； 整个Spring技术栈的一大整合； J2EE开发的...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"},{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}},"next_post":{"title":"Python合并文件夹下的PDF","uid":"89c34e44426aa942dcf00a2b48cf6d75","slug":"Python合并文件夹下的PDF","date":"2021-05-22T14:22:12.000Z","updated":"2021-05-31T06:07:52.758Z","comments":true,"path":"api/articles/Python合并文件夹下的PDF.json","keywords":null,"cover":"/images/banners/VCG41154059609.jpg","text":"Python合并文件夹下的PDF今天本来想用WPS来合并PDF，发现他要钱；接着找了几个软件，都要收费，我一下火就上来了；充钱是不可能充钱的，我试了下用Python写一个，发现成了，也没有乱码现象，直接上代码，copy就能用； 版本PyPDF2==1.26.0Python39 f...","link":"","photos":[],"count_time":{"symbolsCount":666,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":15,"path":"api/categories/算法.json"}],"tags":[{"name":"Python","slug":"Python","count":15,"path":"api/tags/Python.json"},{"name":"小工具","slug":"小工具","count":1,"path":"api/tags/小工具.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}}}