{"title":"15三数之和","uid":"212b0c02273b747bf0747e812cb176a2","slug":"15三数之和","date":"2021-05-18T01:27:01.000Z","updated":"2021-08-10T06:43:25.231Z","comments":true,"path":"api/articles/15三数之和.json","keywords":null,"cover":"/images/banners/VCG211304857144.jpg","content":"<p>给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。</p>\n<p>注意：答案中不可以包含重复的三元组。</p>\n<p> </p>\n<p>示例 1：</p>\n<p>输入：nums = [-1,0,1,2,-1,-4]<br>输出：[[-1,-1,2],[-1,0,1]]<br>示例 2：</p>\n<p>输入：nums = []<br>输出：[]<br>示例 3：</p>\n<p>输入：nums = [0]<br>输出：[]</p>\n<h3 id=\"解法1：双指针-528ms-击败：97-74\"><a href=\"#解法1：双指针-528ms-击败：97-74\" class=\"headerlink\" title=\"解法1：双指针 528ms   击败：97.74%\"></a>解法1：双指针 528ms   击败：97.74%</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">threeSum</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token comment\"># 双指针</span>\n        ans <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        nums_len <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span>\n        nums<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> first <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>nums_len <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 第一个数大于0，那么3个数相加就不可能等于0了</span>\n            <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n            <span class=\"token keyword\">if</span> first <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> nums<span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nums<span class=\"token punctuation\">[</span>first <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n\n            second <span class=\"token operator\">=</span> first <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n            third <span class=\"token operator\">=</span> nums_len <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n            \n            <span class=\"token keyword\">while</span> second <span class=\"token operator\">&lt;</span> third<span class=\"token punctuation\">:</span>\n               \t\n                tar <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>second<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> nums<span class=\"token punctuation\">[</span>third<span class=\"token punctuation\">]</span>\n                <span class=\"token comment\"># 大于0</span>\n                <span class=\"token keyword\">if</span> tar <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                    third <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n                <span class=\"token comment\"># 小于0</span>\n                <span class=\"token keyword\">elif</span> tar <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                    second <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                <span class=\"token comment\"># 等于0</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>nums<span class=\"token punctuation\">[</span>first<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>second<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">[</span>third<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token comment\"># 中指针，与前一个数相等的直接跳过</span>\n                    <span class=\"token keyword\">while</span> second <span class=\"token operator\">&lt;</span> third <span class=\"token keyword\">and</span> nums<span class=\"token punctuation\">[</span>second <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nums<span class=\"token punctuation\">[</span>second<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                        second <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n                    <span class=\"token comment\"># 右·指针，与前一个数相等的直接跳过</span>\n                    <span class=\"token keyword\">while</span> second <span class=\"token operator\">&lt;</span> third <span class=\"token keyword\">and</span> nums<span class=\"token punctuation\">[</span>third <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> nums<span class=\"token punctuation\">[</span>third<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                        third <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n                    third <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> second <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">return</span> ans<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。 注意：答案中不可以包含重复的三元组。 示例 1： 输入：nums = [-1,0,1,2,-1,-4]输出：[...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":15,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":14,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":15,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%951%EF%BC%9A%E5%8F%8C%E6%8C%87%E9%92%88-528ms-%E5%87%BB%E8%B4%A5%EF%BC%9A97-74\"><span class=\"toc-text\">解法1：双指针 528ms   击败：97.74%</span></a></li></ol>","author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"mapped":true,"prev_post":{"title":"Python合并文件夹下的PDF","uid":"89c34e44426aa942dcf00a2b48cf6d75","slug":"Python合并文件夹下的PDF","date":"2021-05-22T14:22:12.000Z","updated":"2021-05-31T06:07:52.758Z","comments":true,"path":"api/articles/Python合并文件夹下的PDF.json","keywords":null,"cover":"/images/banners/VCG41154059609.jpg","text":"Python合并文件夹下的PDF今天本来想用WPS来合并PDF，发现他要钱；接着找了几个软件，都要收费，我一下火就上来了；充钱是不可能充钱的，我试了下用Python写一个，发现成了，也没有乱码现象，直接上代码，copy就能用； 版本PyPDF2==1.26.0Python39 f...","link":"","photos":[],"count_time":{"symbolsCount":666,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":15,"path":"api/categories/算法.json"}],"tags":[{"name":"Python","slug":"Python","count":15,"path":"api/tags/Python.json"},{"name":"小工具","slug":"小工具","count":1,"path":"api/tags/小工具.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}},"next_post":{"title":"70爬楼梯","uid":"d01fb00841d955d4f1e65e30fbb4f017","slug":"70爬楼梯","date":"2021-05-17T11:22:16.000Z","updated":"2021-05-31T06:07:52.756Z","comments":true,"path":"api/articles/70爬楼梯.json","keywords":null,"cover":"/images/banners/VCG211263245974.jpg","text":"假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？ 注意：给定 n 是一个正整数。 示例 1： 输入： 2输出： 2解释： 有两种方法可以爬到楼顶。 1 阶 + 1 阶 2 阶 示例 2： 输入： 3输出： 3解...","link":"","photos":[],"count_time":{"symbolsCount":894,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":15,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":14,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":15,"path":"api/tags/Python.json"},{"name":"递归","slug":"递归","count":1,"path":"api/tags/递归.json"},{"name":"动态规划","slug":"动态规划","count":1,"path":"api/tags/动态规划.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}}}