{"title":"Python多进程与多线程","uid":"b2c2bb855d265e670ce1f297fc82a024","slug":"Python多进程与多线程","date":"2021-06-24T04:40:25.000Z","updated":"2021-06-24T06:12:45.686Z","comments":true,"path":"api/articles/Python多进程与多线程.json","keywords":null,"cover":[],"content":"<h1 id=\"一、多进程\"><a href=\"#一、多进程\" class=\"headerlink\" title=\"一、多进程\"></a>一、多进程</h1><h2 id=\"1、多进程与多任务\"><a href=\"#1、多进程与多任务\" class=\"headerlink\" title=\"1、多进程与多任务\"></a>1、多进程与多任务</h2><h3 id=\"1-1-进程的创建步骤\"><a href=\"#1-1-进程的创建步骤\" class=\"headerlink\" title=\"1.1 进程的创建步骤\"></a>1.1 进程的创建步骤</h3><ul>\n<li><p>导入进程包</p>\n<p>  import multiprocessing</p>\n</li>\n<li><p>通过进程类创建进程对象<br>  进程对象 = multiprocessing.Process()</p>\n</li>\n<li><p>启动进程执行任务<br>  进程对象.start()</p>\n</li>\n</ul>\n<h3 id=\"1-2-通过进程类创建进程对象\"><a href=\"#1-2-通过进程类创建进程对象\" class=\"headerlink\" title=\"1.2 通过进程类创建进程对象\"></a>1.2 通过进程类创建进程对象</h3><p>进程对象 = multiprocessing.Process(target=任务名)</p>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>target</td>\n<td>执行的目标任务名，这里指的是函数名（方法名）</td>\n</tr>\n<tr>\n<td>name</td>\n<td>进程名，一般不用设置</td>\n</tr>\n<tr>\n<td>group</td>\n<td>进程组，目前只能使用None</td>\n</tr>\n</tbody></table>\n<h3 id=\"1-3-进程创建与启动的代码\"><a href=\"#1-3-进程创建与启动的代码\" class=\"headerlink\" title=\"1.3 进程创建与启动的代码\"></a>1.3 进程创建与启动的代码</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> multiprocessing\n<span class=\"token keyword\">import</span> time\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">print1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'11111'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">print2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'22222'</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    sing_process1 <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>print1<span class=\"token punctuation\">)</span>\n    sing_process2 <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>print2<span class=\"token punctuation\">)</span>\n    sing_process1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    sing_process2<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"2、多进程与多任务\"><a href=\"#2、多进程与多任务\" class=\"headerlink\" title=\"2、多进程与多任务\"></a>2、多进程与多任务</h2><h3 id=\"2-1-进程执行带有参数的任务\"><a href=\"#2-1-进程执行带有参数的任务\" class=\"headerlink\" title=\"2.1 进程执行带有参数的任务\"></a>2.1 进程执行带有参数的任务</h3><table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>args</td>\n<td>以元组的方式给执行任务传参</td>\n</tr>\n<tr>\n<td>kwargs</td>\n<td>以字典方式给执行任务传参</td>\n</tr>\n</tbody></table>\n<h3 id=\"2-2-args参数的使用\"><a href=\"#2-2-args参数的使用\" class=\"headerlink\" title=\"2.2 args参数的使用\"></a>2.2 args参数的使用</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">print1</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># target: 进程执行的函数名</span>\n    <span class=\"token comment\"># args: 表示以元组的方式给函数传参</span>\n    sing_process1 <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>print1<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"哈哈哈哈\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    sing_process1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"2-3-kwargs参数的使用\"><a href=\"#2-3-kwargs参数的使用\" class=\"headerlink\" title=\"2.3 kwargs参数的使用\"></a>2.3 kwargs参数的使用</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">print2</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token comment\"># target: 进程执行的函数名</span>\n    <span class=\"token comment\"># args: 表示以元组的方式给函数传参</span>\n    sing_process2 <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>print2<span class=\"token punctuation\">,</span> kwargs<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"s\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"我是进程2\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    sing_process2<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"3、获取进程编号\"><a href=\"#3、获取进程编号\" class=\"headerlink\" title=\"3、获取进程编号\"></a>3、获取进程编号</h2><p><strong>进程编号的作用</strong><br>当程序中进程的数量越来越多时，如果没有办法区分主进程和子进程还有不同的子进程，那么就无法进行有效的进程管理，为了方便管理实际上每个进程都是有自己编号的。</p>\n<h3 id=\"3-1-获取当前进程的编号和父进程的编号：\"><a href=\"#3-1-获取当前进程的编号和父进程的编号：\" class=\"headerlink\" title=\"3.1 获取当前进程的编号和父进程的编号：\"></a>3.1 获取当前进程的编号和父进程的编号：</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">work</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 当前进程的编号（os.getpid()）</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p1-id:\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>getpid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\"># 父进程的编号 （os.getppid()）</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p1-pppp\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>getppid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4-、进程的注意点\"><a href=\"#4-、进程的注意点\" class=\"headerlink\" title=\"4 、进程的注意点\"></a>4 、进程的注意点</h2><h3 id=\"4-1-主进程默认会等待所有的子进程执行结束再结束\"><a href=\"#4-1-主进程默认会等待所有的子进程执行结束再结束\" class=\"headerlink\" title=\"4.1 主进程默认会等待所有的子进程执行结束再结束\"></a>4.1 主进程默认会等待所有的子进程执行结束再结束</h3><p><img src=\"D:\\data\\projects\\gitPro\\ZhuBlogHexo\\source\\images\\questions\\image-202106241321.png\" alt=\"image-20210624135941184\"></p>\n<p>想要主进程结束，子进程也跟着结束，需要设置守护主进程</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> multiprocessing\n<span class=\"token keyword\">import</span> time\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"子进程正在工作中\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n    m_work <span class=\"token operator\">=</span> multiprocessing<span class=\"token punctuation\">.</span>Process<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>work<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 设置守护</span>\n    m_work<span class=\"token punctuation\">.</span>daemon <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    m_work<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"主进程结束了\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"5、多进程实现文件夹多任务白拷贝器\"><a href=\"#5、多进程实现文件夹多任务白拷贝器\" class=\"headerlink\" title=\"5、多进程实现文件夹多任务白拷贝器\"></a>5、多进程实现文件夹多任务白拷贝器</h2><h1 id=\"二、多线程\"><a href=\"#二、多线程\" class=\"headerlink\" title=\"二、多线程\"></a>二、多线程</h1>","feature":true,"text":"一、多进程1、多进程与多任务1.1 进程的创建步骤 导入进程包 import multiprocessing 通过进程类创建进程对象 进程对象 = multiprocessing.Process() 启动进程执行任务 进程对象.start() 1.2 通过进程类创建进程对象进程对...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E5%A4%9A%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">一、多进程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E3%80%81%E5%A4%9A%E8%BF%9B%E7%A8%8B%E4%B8%8E%E5%A4%9A%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">1、多进程与多任务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%88%9B%E5%BB%BA%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">1.1 进程的创建步骤</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-%E9%80%9A%E8%BF%87%E8%BF%9B%E7%A8%8B%E7%B1%BB%E5%88%9B%E5%BB%BA%E8%BF%9B%E7%A8%8B%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\">1.2 通过进程类创建进程对象</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-3-%E8%BF%9B%E7%A8%8B%E5%88%9B%E5%BB%BA%E4%B8%8E%E5%90%AF%E5%8A%A8%E7%9A%84%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">1.3 进程创建与启动的代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%A4%9A%E8%BF%9B%E7%A8%8B%E4%B8%8E%E5%A4%9A%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">2、多进程与多任务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-%E8%BF%9B%E7%A8%8B%E6%89%A7%E8%A1%8C%E5%B8%A6%E6%9C%89%E5%8F%82%E6%95%B0%E7%9A%84%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">2.1 进程执行带有参数的任务</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-args%E5%8F%82%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">2.2 args参数的使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-kwargs%E5%8F%82%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">2.3 kwargs参数的使用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%E3%80%81%E8%8E%B7%E5%8F%96%E8%BF%9B%E7%A8%8B%E7%BC%96%E5%8F%B7\"><span class=\"toc-text\">3、获取进程编号</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%BC%96%E5%8F%B7%E5%92%8C%E7%88%B6%E8%BF%9B%E7%A8%8B%E7%9A%84%E7%BC%96%E5%8F%B7%EF%BC%9A\"><span class=\"toc-text\">3.1 获取当前进程的编号和父进程的编号：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E3%80%81%E8%BF%9B%E7%A8%8B%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9\"><span class=\"toc-text\">4 、进程的注意点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-1-%E4%B8%BB%E8%BF%9B%E7%A8%8B%E9%BB%98%E8%AE%A4%E4%BC%9A%E7%AD%89%E5%BE%85%E6%89%80%E6%9C%89%E7%9A%84%E5%AD%90%E8%BF%9B%E7%A8%8B%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9D%9F%E5%86%8D%E7%BB%93%E6%9D%9F\"><span class=\"toc-text\">4.1 主进程默认会等待所有的子进程执行结束再结束</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%E3%80%81%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E5%A4%B9%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%99%BD%E6%8B%B7%E8%B4%9D%E5%99%A8\"><span class=\"toc-text\">5、多进程实现文件夹多任务白拷贝器</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%A4%9A%E7%BA%BF%E7%A8%8B\"><span class=\"toc-text\">二、多线程</span></a></li></ol>","author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"mapped":true,"prev_post":{},"next_post":{"title":"Python并发编程实战","uid":"c96a29bb0267b75e1f4b13b4bcd3675a","slug":"Python并发编程实战","date":"2021-06-19T12:13:33.000Z","updated":"2021-06-19T12:19:26.868Z","comments":true,"path":"api/articles/Python并发编程实战.json","keywords":null,"cover":null,"text":"Python并发编程实战一、什么是CPU密集型计算、IO密集型计算？CPU密集型（CPU-bound）: CPU密集型也叫计算密集型，是指I/O在很短的时间就可以完成，CPU需要大量的计算和处理，特点是CPU占用率相当高 例如：压缩解压缩、加密解密、正则表达式搜索； IO密集型（...","link":"","photos":[],"count_time":{"symbolsCount":232,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"feature":true}}