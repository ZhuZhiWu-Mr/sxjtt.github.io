{"title":"砖墙问题 leetCode 554","uid":"5234a8c4e062136329f4963c94cde8ba","slug":"砖墙问题","date":"2021-05-03T06:22:29.000Z","updated":"2021-05-05T07:00:29.365Z","comments":true,"path":"api/articles/砖墙问题.json","keywords":null,"cover":"/images/banners/VCG41N1070447322.jpg","content":"<p>题目：你的面前有一堵矩形的、由 n 行砖块组成的砖墙。这些砖块高度相同（也就是一个单位高）但是宽度不同。每一行砖块的宽度之和应该相等。</p>\n<p>你现在要画一条 自顶向下 的、穿过 最少 砖块的垂线。如果你画的线只是从砖块的边缘经过，就不算穿过这块砖。你不能沿着墙的两个垂直边缘之一画线，这样显然是没有穿过一块砖的。</p>\n<p>给你一个二维数组 wall ，该数组包含这堵墙的相关信息。其中，wall[i] 是一个代表从左至右每块砖的宽度的数组。你需要找出怎样画才能使这条线 穿过的砖块数量最少 ，并且返回 穿过的砖块数量 </p>\n<p><img src=\"/post/%E7%A0%96%E5%A2%99%E9%97%AE%E9%A2%98/querstion.png\"></p>\n<p>输入：wall = [[1,2,2,1],[3,1,2],[1,3,2],[2,4],[3,1,2],[1,3,1,1]]<br>输出：2<br>示例 2：</p>\n<p>输入：wall = [[1],[1],[1]]<br>输出：3</p>\n<span id=\"more\"></span>\n\n<h3 id=\"1、题目分析\"><a href=\"#1、题目分析\" class=\"headerlink\" title=\"1、题目分析\"></a>1、题目分析</h3><ul>\n<li>题目要求穿过的砖块数量最少，等效于通过他的间隙最多</li>\n<li>将所有行总数，减去间隙，就是穿过最少的砖块数</li>\n<li>记住，每行的间隙位置，就是砖的左侧宽度和</li>\n</ul>\n<p><img src=\"/post/%E7%A0%96%E5%A2%99%E9%97%AE%E9%A2%98/wall.png\"></p>\n<ul>\n<li>第 1 行的间隙有 [1,3,5]</li>\n<li>第 2 行的间隙有 [3,4]</li>\n<li>第 3 行的间隙有 [1,4]</li>\n<li>第 4 行的间隙有 [2]</li>\n<li>第 5 行的间隙有 [3,4]</li>\n<li>第 6 行的间隙有 [1,4,5]</li>\n</ul>\n<ol>\n<li>上述的每行的每个值，代表间隙位置，单行的间隙位置不会相同出</li>\n<li>统计间隙数，最后用总行数减去出现次数，即得到【最少穿过砖块数】</li>\n</ol>\n<h2 id=\"解法1：使用hash表-52ms\"><a href=\"#解法1：使用hash表-52ms\" class=\"headerlink\" title=\"解法1：使用hash表  52ms\"></a>解法1：使用hash表  52ms</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">leastBricks</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> wall<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span>List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        hashtable <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> wall<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 记录每一块砖缝，出现次数</span>\n            ans <span class=\"token operator\">=</span> <span class=\"token number\">0</span>   <span class=\"token comment\"># 每一行墙，墙缝 </span>\n            <span class=\"token comment\"># 最后一块砖的墙缝不算, [:-1]代表只取到倒数每二个数</span>\n            <span class=\"token keyword\">for</span> num <span class=\"token keyword\">in</span> w<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token comment\"># 统计墙缝</span>\n                ans <span class=\"token operator\">+=</span> num\n                hashtable<span class=\"token punctuation\">[</span>ans<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> hashtable<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        <span class=\"token comment\"># 判断，所有行只有一块砖，就直接穿过所有</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> hashtable<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>wall<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>wall<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>hashtable<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<p>```</p>\n","text":"题目：你的面前有一堵矩形的、由 n 行砖块组成的砖墙。这些砖块高度相同（也就是一个单位高）但是宽度不同。每一行砖块的宽度之和应该相等。 你现在要画一条 自顶向下 的、穿过 最少 砖块的垂线。如果你画的线只是从砖块的边缘经过，就不算穿过这块砖。你不能沿着墙的两个垂直边缘之一画线，这...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":3,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":3,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":3,"path":"api/tags/Python.json"},{"name":"Hash","slug":"Hash","count":2,"path":"api/tags/Hash.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1%E3%80%81%E9%A2%98%E7%9B%AE%E5%88%86%E6%9E%90\"><span class=\"toc-text\">1、题目分析</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%951%EF%BC%9A%E4%BD%BF%E7%94%A8hash%E8%A1%A8-52ms\"><span class=\"toc-text\">解法1：使用hash表  52ms</span></a>","author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"mapped":true,"prev_post":{"title":"两数之和 leetCode 1","uid":"b529ed6ebbafadec850827aed7fed9b6","slug":"两数之和","date":"2021-05-03T11:55:20.000Z","updated":"2021-05-05T07:00:25.752Z","comments":true,"path":"api/articles/两数之和.json","keywords":null,"cover":"/images/banners/VCG41154059609.jpg","text":"题目：给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。你可以按任意顺序返回答案 示例 1： 输入：nums = [2...","link":"","photos":[],"count_time":{"symbolsCount":691,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":3,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":3,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":3,"path":"api/tags/Python.json"},{"name":"Hash","slug":"Hash","count":2,"path":"api/tags/Hash.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"feature":true},"next_post":{"title":"vim操作宝典","uid":"901b553f2ebc4e976cd70013f9320085","slug":"vim操作宝典","date":"2021-05-01T12:41:12.000Z","updated":"2021-05-05T06:55:30.201Z","comments":true,"path":"api/articles/vim操作宝典.json","keywords":null,"cover":"/images/banners/VCG21gic18180994.jpg","text":"在行尾插入视图模式：a 键 Vim显示文件已经打开非正常退出，就会产生.swp文件，可以把他删除 rm -rf .文件名.swp 在行上方或者下方插入两个都是字母 o：在下方 O：在上方 合并两行视图模式：J 多行注释（1）首先按键盘上的ESC进入命令行模式 （2）再按Ctrl+...","link":"","photos":[],"count_time":{"symbolsCount":360,"symbolsTime":"1 mins."},"categories":[{"name":"Vim","slug":"Vim","count":1,"path":"api/categories/Vim.json"}],"tags":[{"name":"Linux","slug":"Linux","count":3,"path":"api/tags/Linux.json"},{"name":"Vim","slug":"Vim","count":1,"path":"api/tags/Vim.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}}}