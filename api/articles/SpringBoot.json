{"title":"SpringBoot","uid":"af912e0d33a827f03582ef107fe8a87d","slug":"SpringBoot","date":"2021-05-31T03:42:36.000Z","updated":"2021-05-31T05:59:41.293Z","comments":true,"path":"api/articles/SpringBoot.json","keywords":null,"cover":"/images/banners/VCG41N1169192820.jpg","content":"<p>[toc]</p>\n<h1 id=\"Spring-boot-2\"><a href=\"#Spring-boot-2\" class=\"headerlink\" title=\"Spring boot 2\"></a>Spring boot 2</h1><h3 id=\"一、Boot入门\"><a href=\"#一、Boot入门\" class=\"headerlink\" title=\"一、Boot入门\"></a>一、Boot入门</h3><p><strong>SpringBoot2核心技术与响应式编程: <a href=\"https://www.yuque.com/atguigu/springboot\">https://www.yuque.com/atguigu/springboot</a></strong></p>\n<h4 id=\"1、简介\"><a href=\"#1、简介\" class=\"headerlink\" title=\"1、简介\"></a>1、简介</h4><ul>\n<li>简化Spring应用开发的一个框架；</li>\n<li>整个Spring技术栈的一大整合；</li>\n<li>J2EE开发的一站式解决方案；</li>\n</ul>\n<p>Spring Boot来简化Spring应用开发，约定大于配置，去繁从简，just run就能创建一个独立的，产品级别的应用</p>\n<p><strong>背景:</strong></p>\n<p>J2EE笨重的开发、繁多的配置、低下的开发效率、复杂的部署流程、第三方技术集成难度大。</p>\n<p><strong>解决∶</strong></p>\n<p>“Spring全家桶”时代。<br>Spring Boot &gt;J2EE一站式解决方案Spring Cloud→分布式整体解决方案</p>\n<p>User -&gt; Spring Boot -&gt; Spring</p>\n<p><strong>优点</strong></p>\n<ul>\n<li>快速创建独立运行的Spring项目以及主流框架集成</li>\n<li>使用嵌入式的Servlet容器，应用无需打成WAR包</li>\n<li>starters自动依赖与版本控制</li>\n<li>大量的自动配置，简化开发，也可修改默认值</li>\n<li>无需配置XML，无代码生成，开箱即用</li>\n<li>准生产环境的运行时应用监控</li>\n<li>与云计算的天然集成</li>\n</ul>\n<h4 id=\"2、微服务\"><a href=\"#2、微服务\" class=\"headerlink\" title=\"2、微服务\"></a>2、微服务</h4><p>2014， martin fowler</p>\n<p>微服务：架构风格（服务微化）</p>\n<p>一个应用应该是一组小型服务；可以通过<br>HTTP的方式进行互通；</p>\n<p>单体应用：ALL IN ONE<br>微服务：每一个功能元素最终都是一个可独立替换和独立升级的软件单元；</p>\n<h4 id=\"3、环境配置\"><a href=\"#3、环境配置\" class=\"headerlink\" title=\"3、环境配置\"></a>3、环境配置</h4><ul>\n<li>jdk 1.8.0_40 </li>\n<li>Spring boot 2.4.3</li>\n<li>IDEA 2020.3</li>\n<li>Maven 3.6.3</li>\n<li>给Maven的settigs.xml文件中的 </profiles>里加上如下配置</li>\n</ul>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>profile</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>jdk-1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>activation</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>activeByDefault</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>activeByDefault</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>jdk</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>jdk</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>activation</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>properties</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.source</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.target</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>maven.compiler.compilerVersion</span><span class=\"token punctuation\">></span></span>1.8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>maven.compiler.compilerVersion</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>properties</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>profile</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"4、Spring-Boot-HelloWorld\"><a href=\"#4、Spring-Boot-HelloWorld\" class=\"headerlink\" title=\"4、Spring Boot HelloWorld\"></a>4、Spring Boot HelloWorld</h4><p>功能：<br>浏览器发送hello请求，服务器请求并处理，响应HelloWorld字符串</p>\n<h5 id=\"4-1-初始化项目\"><a href=\"#4-1-初始化项目\" class=\"headerlink\" title=\"4.1 初始化项目\"></a>4.1 初始化项目</h5><p>根据该网址创建项目：<a href=\"https://blog.51cto.com/yaowusheng/2565318\">https://blog.51cto.com/yaowusheng/2565318</a></p>\n<p>不能使用RequestMapping等，在pom文件中添加如下 </p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"4-2-编写相关的Controller、Service\"><a href=\"#4-2-编写相关的Controller、Service\" class=\"headerlink\" title=\"4.2 编写相关的Controller、Service\"></a>4.2 编写相关的Controller、Service</h5><p>(注意，contrller类所在包的级别，要在主程序类下。否则找不到)</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span>springbootdemo<span class=\"token punctuation\">.</span>controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Controller</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">RequestMapping</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>web<span class=\"token punctuation\">.</span>bind<span class=\"token punctuation\">.</span>annotation<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">ResponseBody</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorldController</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@ResponseBody</span>\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hello\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">helloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"4-3-打包成可执行的jar包\"><a href=\"#4-3-打包成可执行的jar包\" class=\"headerlink\" title=\"4.3 打包成可执行的jar包\"></a>4.3 打包成可执行的jar包</h5><p> IDEA操作步骤</p>\n<p>在IDEA右侧，选择Maven–&gt;展开自己的项目–》选择Lifecycle–》双击package<br>–&gt;运行完成之后，在左边项目目录中展开target–&gt;里面有个jar包，可以使用java -jar运行该jar包。</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!--    这个插件，可以应用打包成一个可执行的jar包--></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>build</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugins</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>plugin</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-maven-plugin<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugin</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>plugins</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>build</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"5、探究Hello-World\"><a href=\"#5、探究Hello-World\" class=\"headerlink\" title=\"5、探究Hello World\"></a>5、探究Hello World</h4><h5 id=\"5-1-POM文件\"><a href=\"#5-1-POM文件\" class=\"headerlink\" title=\"5.1 POM文件\"></a>5.1 POM文件</h5><h6 id=\"5-1-1-父项目\"><a href=\"#5-1-1-父项目\" class=\"headerlink\" title=\"5.1.1 父项目\"></a>5.1.1 父项目</h6><pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\">    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parent</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-parent<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.4.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>relativePath</span><span class=\"token punctuation\">/></span></span> <span class=\"token comment\">&lt;!-- lookup parent from repository --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parent</span><span class=\"token punctuation\">></span></span>\n    \n    他的父项目是\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>parent</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-dependencies<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>version</span><span class=\"token punctuation\">></span></span>2.4.3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>version</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>parent</span><span class=\"token punctuation\">></span></span>\n他来真正管理Spring Boot应用里面的所有依赖版本；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Spring Boot的版本仲裁中心；</p>\n<p>以后我们导入依赖默认是不需要写版本；（没有在dependencies里面管理的依赖自然需要声明版本号）</p>\n<h6 id=\"5-1-2-启动器\"><a href=\"#5-1-2-启动器\" class=\"headerlink\" title=\"5.1.2 启动器\"></a>5.1.2 启动器</h6><pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-starter-web<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>Spring-boot-starter-web</strong>:</p>\n<p>​    Spring-boot-starter:spring-boot 场景控制器：帮我们导入了web模块正常运行所依赖的组件 ；</p>\n<p>Spring Boot将所有的功能场景都抽取出来 ，做成一个个的starters（启动器），只需要在项目里面引入 这些starter相关场景的所有依赖都会导入进行。要用什么功能就导入什么场景的启动器</p>\n<h5 id=\"5-2-主程序类，主入口类\"><a href=\"#5-2-主程序类，主入口类\" class=\"headerlink\" title=\"5.2 主程序类，主入口类\"></a>5.2 主程序类，主入口类</h5><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>autoconfigure<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">SpringBootApplication</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/**\n@SpringBootApplication来标注一个主程序类，说明这是一个Spring Boot应用\n*/</span>\n<span class=\"token annotation punctuation\">@SpringBootApplication</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpringbootdemoApplication</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">SpringApplication</span><span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">SpringbootdemoApplication</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>@SpringBootApplication</strong> : Spring Boot应用标注在某个类上说明这个类是SpringBoot的主配置类，SpringBoot就应该运行这个类的main方法来启动SpringBoot应用；</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span>TYPE<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span>RUNTIME<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Inherited</span>\n<span class=\"token annotation punctuation\">@SpringBootConfiguration</span>\n<span class=\"token annotation punctuation\">@EnableAutoConfiguration</span>\n<span class=\"token annotation punctuation\">@ComponentScan</span><span class=\"token punctuation\">(</span>\n    excludeFilters <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token annotation punctuation\">@Filter</span><span class=\"token punctuation\">(</span>\n    type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span>CUSTOM<span class=\"token punctuation\">,</span>\n    classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">TypeExcludeFilter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Filter</span><span class=\"token punctuation\">(</span>\n    type <span class=\"token operator\">=</span> <span class=\"token class-name\">FilterType</span><span class=\"token punctuation\">.</span>CUSTOM<span class=\"token punctuation\">,</span>\n    classes <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">AutoConfigurationExcludeFilter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>@SpringBootConfiguration</strong> : Spring Boot的配置类<br>    标注在某个类上，表示是一个Spring Boot的配置类；</p>\n<p>​    <strong>@Configuration</strong>:配置类上来标注这个注解；</p>\n<p>​        配置类——配置文件；配置类也是容器中的一个组件；@Component</p>\n<p><strong>@EnableAutoConfiguration</strong>:开启自动配置功能；</p>\n<p>​    以前我们需要配置的东西，Spring Boot帮我们自动配置；**@EnableAutoConfiguration**告诉Spring Boot开启自动配置功能；这样自动配置才能生效；</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@AutoConfigurationPackage</span>\n<span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token class-name\">AutoConfigurationImportSelector</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">EnableAutoConfiguration</span> <span class=\"token punctuation\">&#123;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>@AutoConfigurationPackage</strong>: 自动配置包</p>\n<p>​    @<strong>Import</strong>({AutoConfigurationImportSelector.class})；</p>\n<p>​    Spring的底层注解@import，给容器中导入一个组件；导入的组件由AutoConfigurationPackages.Registrar.class；</p>\n<p><strong>将主配置类（@SpringBootApplication标注的类）的所在包及下面所有子包里面的所有组件扫描到Spring容器；</strong></p>\n<p>​    @Import(AutoConfigurationImportSelector.class) ;</p>\n<p>​        给容器中导入组件？</p>\n<p>​        <strong>EnableAutoConfiguratioImportSelector</strong>： 导入哪些组件的选择器；</p>\n<p>​        将所有需要导入的组件以全类名的方式返回；这些组件就会被添加到容器中；</p>\n<p>​        会给容器中导入非常多的自动配置类（xxxAutoConfiguration）;就是给容器中导入这个场景所需要的所有组件，并配置好这些组件；</p>\n<p>有了自动配置类，免去了我们手动编写配置注入功能组件等工作；</p>\n<p>​        SpringFactoriesLoader.loadFactoryNames(EnableAutoConfiguration.class, classLoader);</p>\n<p>Spring Boot启动的时候从类路径下的META-INF/spring.factories中获取EnableAutoConfiguration指定的值 ,将这些值作为自动配置类导入到容器中，自动配置类就生效，帮我们进行自动配置工作；</p>\n<p>J2EE的整体整合解决方案和自动配置都在<strong>spring-boot-autoconfigure-2.4.3.jar</strong>;</p>\n<h4 id=\"6、使用Spring-Initializer快速创建Spring-Boot项目\"><a href=\"#6、使用Spring-Initializer快速创建Spring-Boot项目\" class=\"headerlink\" title=\"6、使用Spring Initializer快速创建Spring Boot项目\"></a>6、使用Spring Initializer快速创建Spring Boot项目</h4><p>根据该网址创建项目：<a href=\"https://blog.51cto.com/yaowusheng/2565318\">https://blog.51cto.com/yaowusheng/2565318</a></p>\n<p>IDE都支持使用Spring的项目创建向导快速创建一个Spring Boot项目；</p>\n<p>选择我们需要的模块；向导会联网创建Spring Boot项目；</p>\n<p>默认生成的Spring Boot项目；</p>\n<ul>\n<li>主程序 已经写好，只需要写我们的逻辑</li>\n<li>resources文件夹中目录结构<ul>\n<li>static :保存所有的静态资源：js css images；</li>\n<li>templates:保存所有的模板页面：（Spring Boot默认jar包使用嵌入式的Tomcat,默认不支持JSP页面）‘可以使用模板引擎（freemarker、thymeleaf）；</li>\n<li>application.properties: Spring Boot应用的配置文件；可以修改一些默认设置；</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"二、Spring-Boot配置\"><a href=\"#二、Spring-Boot配置\" class=\"headerlink\" title=\"二、Spring Boot配置\"></a>二、Spring Boot配置</h3><h4 id=\"2-1-配置文件\"><a href=\"#2-1-配置文件\" class=\"headerlink\" title=\"2.1 配置文件\"></a>2.1 配置文件</h4><p>SpringBoot使用一个全局的配置文件，配置文件名是固定的;</p>\n<p><strong>如果同时配置，properties优先yml</strong></p>\n<ul>\n<li><p>application.properties</p>\n</li>\n<li><p>application.yml</p>\n<p>配置文件的作用: 修改SpringBoot自动配置的默认值;</p>\n<p>SpringBoot在底层都给我们自动配置好;</p>\n</li>\n</ul>\n<p>YAML（YAML Ain`t Markup Language）</p>\n<pre><code>+ YAML A Markup Language：是一个标记语言\n+ YAML isn`t Markup Language：不是一个标记语言\n</code></pre>\n<p>标记语言：</p>\n<pre><code>+ 以前的配置文件：大多都使用的是xxx.xml文件；\n+ YAML:以数据为中心，比json、xml更适合做配置文件；\n+ YAML:配置例子\n</code></pre>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8080</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<pre><code>+ XML:\n</code></pre>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>server</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>port</span><span class=\"token punctuation\">></span></span>8080<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>port</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>server</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-2、YAML语法\"><a href=\"#2-2、YAML语法\" class=\"headerlink\" title=\"2.2、YAML语法\"></a>2.2、YAML语法</h4><h5 id=\"2-2-1-基本语法\"><a href=\"#2-2-1-基本语法\" class=\"headerlink\" title=\"2.2.1 基本语法\"></a>2.2.1 基本语法</h5><p>k:(空格)v:表示一对键值对（空格必须有);<br>以<strong>空格</strong>的缩进来控制层级关系;只要是左对齐的一列数据，都是同一个层级的</p>\n<pre class=\"line-numbers language-yml\" data-language=\"yml\"><code class=\"language-yml\"><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8081</span>\n\t<span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /hello<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<p>属性和值也是大小写敏感;</p>\n<h5 id=\"2-2-2-值的写法\"><a href=\"#2-2-2-值的写法\" class=\"headerlink\" title=\"2.2.2 值的写法\"></a>2.2.2 值的写法</h5><h6 id=\"字面量︰普通的值（数字，字符串，布尔\"><a href=\"#字面量︰普通的值（数字，字符串，布尔\" class=\"headerlink\" title=\"字面量︰普通的值（数字，字符串，布尔)\"></a>字面量︰普通的值（数字，字符串，布尔)</h6><p>​    k: v: 字面直接来写;<br>​        字符串默认不用加上单引号或者双引号;</p>\n<p>​            “” 双引号：不会转义字符串里面的特殊字符;特殊字符会作为本身想表示的意思</p>\n<p>​                name: “zhangsan \\n lisi    输出: zhangsan 换行 lisi</p>\n<p>​            ’:单引号:会转义特殊字符，特殊字符最终只是一个普通的字符串数据<br>​                name: “zhangsan \\n lisi    输出: zhangsan in lisi</p>\n<h6 id=\"2-2-3-对象、Map（属性和值）（键值对）：\"><a href=\"#2-2-3-对象、Map（属性和值）（键值对）：\" class=\"headerlink\" title=\"2.2.3 对象、Map（属性和值）（键值对）：\"></a>2.2.3 对象、Map（属性和值）（键值对）：</h6><p>​    k: v :在下一行来写对象的属性和值的关系； 注意缩进</p>\n<p>​        对象还是k: v的方式</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8081</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>行内写法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">server: (port: 8081, path: &#x2F;test)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h6 id=\"数组（List、Set）\"><a href=\"#数组（List、Set）\" class=\"headerlink\" title=\"数组（List、Set）:\"></a>数组（List、Set）:</h6><p>用 - 值表示数组中的一个元素</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">pets</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> cat\n<span class=\"token punctuation\">-</span> dog\n<span class=\"token punctuation\">-</span> pig<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>行内写法</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">pets</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>cat<span class=\"token punctuation\">,</span> dog<span class=\"token punctuation\">,</span> pig<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-3-配置文件值注入\"><a href=\"#2-3-配置文件值注入\" class=\"headerlink\" title=\"2.3 配置文件值注入\"></a>2.3 配置文件值注入</h4><h5 id=\"2-3-1-配置文件-xx-yaml\"><a href=\"#2-3-1-配置文件-xx-yaml\" class=\"headerlink\" title=\"2.3.1 配置文件 xx.yaml\"></a>2.3.1 配置文件 xx.yaml</h5><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">person</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> xiaozhu\n  <span class=\"token key atrule\">isDog</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">age</span><span class=\"token punctuation\">:</span> <span class=\"token number\">18</span>\n  <span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span> 2020/12/1\n  <span class=\"token key atrule\">map</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">&#123;</span><span class=\"token key atrule\">k1</span><span class=\"token punctuation\">:</span> yihao<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">k2</span><span class=\"token punctuation\">:</span> erhao<span class=\"token punctuation\">&#125;</span>\n  <span class=\"token key atrule\">list</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> qqq\n    <span class=\"token punctuation\">-</span> aaa\n    <span class=\"token punctuation\">-</span> ccc\n  <span class=\"token key atrule\">dog</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> jingmao\n    <span class=\"token key atrule\">remarks</span><span class=\"token punctuation\">:</span> ni shi jing mao <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>javaBean:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/*\n* 将配置文件中配置的每一个属性值，映射到这个组件中\n* @ConfigurationProperties : 告诉Spring Boot将本类中的所有属性和配置文件中相关的配置进行绑定；\n* prefix = \"person\" ，配置文件中哪个下面的所有属性一一映射*/</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"person\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> isDog<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Date</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Dog</span> dog<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>导入配置文件处理器，编写配置就会有提示</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token comment\">&lt;!--   导入配置文件处理器，配置文件进行绑定就会有提示     --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>dependency</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>groupId</span><span class=\"token punctuation\">></span></span>org.springframework.boot<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>groupId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>artifactId</span><span class=\"token punctuation\">></span></span>spring-boot-configuration-processor<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>artifactId</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>optional</span><span class=\"token punctuation\">></span></span>true<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>optional</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>dependency</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"2-3-2使用properties，其他配置相同，properties文件如下\"><a href=\"#2-3-2使用properties，其他配置相同，properties文件如下\" class=\"headerlink\" title=\"2.3.2使用properties，其他配置相同，properties文件如下\"></a>2.3.2使用properties，其他配置相同，properties文件如下</h5><pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token attr-name\">person.name</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">张三</span>\n<span class=\"token attr-name\">person.age</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">19</span>\n<span class=\"token attr-name\">person.list</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">a,b,c</span>\n<span class=\"token attr-name\">person.map.k1</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">aaa</span>\n<span class=\"token attr-name\">person.map.k2</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">bbb</span>\n<span class=\"token attr-name\">person.dog.name</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">xiaoha</span>\n<span class=\"token attr-name\">person.dog.remarks</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">nihao</span>\n<span class=\"token comment\"># 如果遇到中文编码问题，在settings-->file Encodings--> Properties Files --> 选择UTF-8加上勾选Transparent native-to-ascii conversion</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"D:\\data\\projects\\gitPro\\study-notes\\SpringBoot\\images\\1614492402407.png\" alt=\"1614492402407\"></p>\n<h5 id=\"2-3-3-Value获取值和-ConfigurationProperties获取值比较\"><a href=\"#2-3-3-Value获取值和-ConfigurationProperties获取值比较\" class=\"headerlink\" title=\"2.3.3 @Value获取值和@ConfigurationProperties获取值比较\"></a>2.3.3 @Value获取值和@ConfigurationProperties获取值比较</h5><table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">@ConfiggurationProperties</th>\n<th align=\"center\">@Value</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">功能</td>\n<td align=\"center\">批量注入配置文件中的属性</td>\n<td align=\"center\">一个个指定</td>\n</tr>\n<tr>\n<td align=\"center\">松散绑定（松散语法）</td>\n<td align=\"center\">支持</td>\n<td align=\"center\">不支持</td>\n</tr>\n<tr>\n<td align=\"center\">SpEL</td>\n<td align=\"center\">不支持</td>\n<td align=\"center\">支持</td>\n</tr>\n<tr>\n<td align=\"center\">JSR303数据校验</td>\n<td align=\"center\">支持</td>\n<td align=\"center\">不支持</td>\n</tr>\n<tr>\n<td align=\"center\">复杂类型封装</td>\n<td align=\"center\">支持</td>\n<td align=\"center\">不支持</td>\n</tr>\n</tbody></table>\n<p>配置文件yml还是properties他们都能获取到值；</p>\n<p>如果说，我们只是在某个业务逻辑中需要获取一下配置文件中的某项值，使用@Value</p>\n<p>如果说，我们专门编写了一个javaBean来和配置文件进行映射，我们就直接使用@ConfigurationProperties;</p>\n<h5 id=\"2-3-4-PropertySource-amp-ImportResource\"><a href=\"#2-3-4-PropertySource-amp-ImportResource\" class=\"headerlink\" title=\"2.3.4 @PropertySource&amp; @ImportResource\"></a>2.3.4 @PropertySource&amp; @ImportResource</h5><p>@<strong>PropertySOurce</strong>加载指定的配置文件；</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/*\n* 将配置文件中配置的每一个属性值，映射到这个组件中\n* @ConfigurationProperties : 告诉Spring Boot将本类中的所有属性和配置文件中相关的配置进行绑定；默认全局文件获取值\n* prefix = \"person\" ，配置文件中哪个下面的所有属性一一映射*/</span>\n<span class=\"token annotation punctuation\">@PropertySource</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"classpath:person.properties\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@ConfigurationProperties</span><span class=\"token punctuation\">(</span>prefix <span class=\"token operator\">=</span> <span class=\"token string\">\"person\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">boolean</span> isDog<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Integer</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Date</span> data<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> map<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> list<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Dog</span> dog<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>@ImportResource</strong>:导入Spring的配置文件，让配置文件里面的内容生效；</p>\n<p>Spring Boot里面没有Spring的配置文件，我们自己编写的配置文件，也不能自动识别；</p>\n<p>想让Spring的配置文件生效；**@ImportResource**标注在一个配置类上</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@ImportResource</span><span class=\"token punctuation\">(</span>locations <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"classpath:beans.xml\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n导入spring的配置文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>SpringBoot推荐给容器中添加组件的方式：推荐使用全注解方式</p>\n<p>1、配置类====Spring配置文件</p>\n<p>2、使用@Bean给容器中添加组件</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/*\n    @Configuration:指明当前类是一个配置类；就是来替代之前的Spring配置文件\n    在配置文件中用&lt;bean>&lt;bean/>标签添加组件\n */</span>\n<span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyAppConfig</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 将方法的返回值添加到容器中，容器中的这个组件默认的id就是方法名</span>\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HelloService</span> <span class=\"token function\">helloService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"helloService已添加\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HelloService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-4、配置文件占位符\"><a href=\"#2-4、配置文件占位符\" class=\"headerlink\" title=\"2.4、配置文件占位符\"></a>2.4、配置文件占位符</h4><h5 id=\"2-4-1、随机数\"><a href=\"#2-4-1、随机数\" class=\"headerlink\" title=\"2.4.1、随机数\"></a>2.4.1、随机数</h5><pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\">random.value\nrandom.int\n$&#123;random.long&#125;\nrandom.int(10)\n<span class=\"token attr-name\">&#123;random.int[1024,</span> <span class=\"token attr-value\">65536]&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h5 id=\"2-4-2、点位符获取之前配置的值，如果没有可以用：号来指定默认值\"><a href=\"#2-4-2、点位符获取之前配置的值，如果没有可以用：号来指定默认值\" class=\"headerlink\" title=\"2.4.2、点位符获取之前配置的值，如果没有可以用：号来指定默认值\"></a>2.4.2、点位符获取之前配置的值，如果没有可以用：号来指定默认值</h5><pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token attr-name\">person.name</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">张三$&#123;random.uuid&#125;</span>\n<span class=\"token attr-name\">person.age</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">$&#123;random.int&#125;</span>\n<span class=\"token attr-name\">person.list</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">a,b,c</span>\n<span class=\"token attr-name\">person.map.k1</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">aaa</span>\n<span class=\"token attr-name\">person.map.k2</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">bbb</span>\n<span class=\"token attr-name\">person.dog.name</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">$&#123;person.wq: zhu&#125;dog</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-5、Profile-测试环境，正式环境配置\"><a href=\"#2-5、Profile-测试环境，正式环境配置\" class=\"headerlink\" title=\"2.5、Profile,测试环境，正式环境配置\"></a>2.5、Profile,测试环境，正式环境配置</h4><h5 id=\"2-5-1、多Profile文件\"><a href=\"#2-5-1、多Profile文件\" class=\"headerlink\" title=\"2.5.1、多Profile文件\"></a>2.5.1、多Profile文件</h5><p>我们在主配置文件编写的时候，文件名可以是： application-{profile}.properties/yml</p>\n<p><img src=\"D:\\data\\projects\\gitPro\\study-notes\\SpringBoot\\images\\image-20210228152740784.png\" alt=\"image-20210228152740784\"></p>\n<h5 id=\"2-5-2、yml支持多文档块方式\"><a href=\"#2-5-2、yml支持多文档块方式\" class=\"headerlink\" title=\"2.5.2、yml支持多文档块方式\"></a>2.5.2、yml支持多文档块方式</h5><pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">active</span><span class=\"token punctuation\">:</span> dev\n    \n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8020</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span> dev\n  \n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8030</span>\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">profiles</span><span class=\"token punctuation\">:</span> prod\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h5 id=\"2-5-3、激活指定profile\"><a href=\"#2-5-3、激活指定profile\" class=\"headerlink\" title=\"2.5.3、激活指定profile\"></a>2.5.3、激活指定profile</h5><p>1、</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token attr-name\">spring.profiles.active</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">dev</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>2、命令行：</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token attr-name\">java</span> <span class=\"token attr-value\">-jar ***.jav --spring.profiles.active=dev</span>\n可以直接在测试的时候，配置传入命令行参数<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<p><img src=\"D:\\data\\projects\\gitPro\\study-notes\\SpringBoot\\images\\image-20210228154415200.png\" alt=\"image-20210228154415200\"></p>\n<p>3、虚拟机参数</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token attr-name\">-Dspring.profiles.active</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">dev</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img src=\"D:\\data\\projects\\gitPro\\study-notes\\SpringBoot\\images\\image-20210228154312645.png\" alt=\"image-20210228154312645\"></p>\n<h4 id=\"2-6、配置文件加载位置\"><a href=\"#2-6、配置文件加载位置\" class=\"headerlink\" title=\"2.6、配置文件加载位置\"></a>2.6、配置文件加载位置</h4><p>. spring boot启动会扫描以下位置的application.properties或者application.yml文件作为Spring boot的默认配置文件</p>\n<pre class=\"line-numbers language-properties\" data-language=\"properties\"><code class=\"language-properties\"><span class=\"token comment\"># 配置项目的访问路径</span>\n<span class=\"token attr-name\">server.context-path</span><span class=\"token punctuation\">=</span><span class=\"token attr-value\">/boot02</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ul>\n<li>file:./config/</li>\n<li>file:./</li>\n<li>classpath:/config/</li>\n<li>classpath:/</li>\n<li>一以上是按照<strong>优先级</strong>从<strong>高到低</strong>的顺序，所有位置的文件都会被加载，<strong>高优先级配置内容会覆盖低优先级配置内容</strong>。</li>\n<li>SpringBoot会从四个位置全部加载主配置文件；互补配置；</li>\n<li><strong>我们也可以通过配置spring.config.location来改变默认配置；</strong></li>\n</ul>\n<p>项目打包好以后，我们可以使用命令行参数的形式，启动项目的时候来指定配置文件的新位置；指配置文件和默认加载的这些配置文件共同起作用形成互补配置；</p>\n<h4 id=\"2-7、外部配置加载顺序\"><a href=\"#2-7、外部配置加载顺序\" class=\"headerlink\" title=\"2.7、外部配置加载顺序\"></a>2.7、外部配置加载顺序</h4><p>SpringBoot民可以从以下位置加载配置；优先级从高到低；高优先级的配置覆盖低优先级的配置</p>\n<ol>\n<li>命令行参数</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">java <span class=\"token operator\">-</span>jar <span class=\"token operator\">*</span><span class=\"token punctuation\">.</span>jar <span class=\"token operator\">--</span>server<span class=\"token punctuation\">.</span>port<span class=\"token operator\">=</span><span class=\"token number\">8087</span> <span class=\"token operator\">--</span>server<span class=\"token punctuation\">.</span>context<span class=\"token operator\">-</span>path<span class=\"token operator\">=</span><span class=\"token operator\">/</span>abc\n<span class=\"token comment\">// 多个配置用空格分开；--配置项=值</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li><p>来自java:comp/env的JNDI属性</p>\n</li>\n<li><p>java系统属性（System.getProperties()）</p>\n</li>\n<li><p>操作系统环境变量</p>\n</li>\n<li><p>RandomValuePropertySource配置的random.*属性值</p>\n<p><strong>由jar包外向jar包内进行寻找；</strong></p>\n<p><strong>优先加载带profile</strong></p>\n</li>\n<li><p>jar包外部的application-{profile}.properties或application.yml(带spring.profile)配置文件</p>\n</li>\n<li><p>jar包内部的application-{profile}.properties或application.yml(带spring.profile)配置文件</p>\n<p><strong>再来加载不带profile</strong></p>\n</li>\n<li><p>jar包外部的application.properties或application.yml(不带spring.profile)配置文件</p>\n</li>\n<li><p>jar包内部的application.properties或application.yml(不带spring.profile)配置文件</p>\n</li>\n<li><p>@Configuration注解类上的@PropertySource</p>\n</li>\n<li><p>通过SpringApplication.setDefaultProperties指定的默认属性</p>\n</li>\n</ol>\n<h4 id=\"2-8、自动配置原理\"><a href=\"#2-8、自动配置原理\" class=\"headerlink\" title=\"2.8、自动配置原理\"></a>2.8、自动配置原理</h4><p>配置文件到底能写什么？怎么写？自动配置原理；</p>\n<p>配置文件能配置的属性参照 </p>\n<p>自动配置原理：</p>\n<p>1）、SpringBoot启动的时候加载主配置类，开启了自动配置功能@EnableAutoCOnfiguration</p>\n<p>2）、@EnableAutoConfiguration作用；</p>\n<p>​    利用EnableAutoConfigurationImportSelector给窗口中导入一些组件？</p>\n<p>​    可以插件selectImports()方法的内容；</p>\n<p>​    List<String> configurations = getCandidateConfigurations(annotationMetadata, attributes);</p>\n<h3 id=\"三、Spring-Boot与日志\"><a href=\"#三、Spring-Boot与日志\" class=\"headerlink\" title=\"三、Spring Boot与日志\"></a>三、Spring Boot与日志</h3><h3 id=\"四、Spring-Boot与Web开发\"><a href=\"#四、Spring-Boot与Web开发\" class=\"headerlink\" title=\"四、Spring Boot与Web开发\"></a>四、Spring Boot与Web开发</h3><h3 id=\"五、Spring-Boot与Docker\"><a href=\"#五、Spring-Boot与Docker\" class=\"headerlink\" title=\"五、Spring Boot与Docker\"></a>五、Spring Boot与Docker</h3><h3 id=\"六、Spring-Boot与数据访问\"><a href=\"#六、Spring-Boot与数据访问\" class=\"headerlink\" title=\"六、Spring Boot与数据访问\"></a>六、Spring Boot与数据访问</h3><h3 id=\"七、Spring-Boot启动配置原理\"><a href=\"#七、Spring-Boot启动配置原理\" class=\"headerlink\" title=\"七、Spring Boot启动配置原理\"></a>七、Spring Boot启动配置原理</h3><h3 id=\"八、Spring-Boot自定义starters\"><a href=\"#八、Spring-Boot自定义starters\" class=\"headerlink\" title=\"八、Spring Boot自定义starters\"></a>八、Spring Boot自定义starters</h3><h3 id=\"九、Spring-Boot与缓存\"><a href=\"#九、Spring-Boot与缓存\" class=\"headerlink\" title=\"九、Spring Boot与缓存\"></a>九、Spring Boot与缓存</h3><h3 id=\"十、Spring-Boot与消息\"><a href=\"#十、Spring-Boot与消息\" class=\"headerlink\" title=\"十、Spring Boot与消息\"></a>十、Spring Boot与消息</h3><h3 id=\"十一、Spring-Boot与检索\"><a href=\"#十一、Spring-Boot与检索\" class=\"headerlink\" title=\"十一、Spring Boot与检索\"></a>十一、Spring Boot与检索</h3><h3 id=\"十二、Spring-Boot与任务\"><a href=\"#十二、Spring-Boot与任务\" class=\"headerlink\" title=\"十二、Spring Boot与任务\"></a>十二、Spring Boot与任务</h3><h3 id=\"十三、Spring-Boot与安全\"><a href=\"#十三、Spring-Boot与安全\" class=\"headerlink\" title=\"十三、Spring Boot与安全\"></a>十三、Spring Boot与安全</h3><h3 id=\"十四、Spring-Boot与分布式\"><a href=\"#十四、Spring-Boot与分布式\" class=\"headerlink\" title=\"十四、Spring Boot与分布式\"></a>十四、Spring Boot与分布式</h3><h3 id=\"十五、Spring-Boot与开发热部署\"><a href=\"#十五、Spring-Boot与开发热部署\" class=\"headerlink\" title=\"十五、Spring Boot与开发热部署\"></a>十五、Spring Boot与开发热部署</h3><h3 id=\"十六、Spring-Boot与监控管理\"><a href=\"#十六、Spring-Boot与监控管理\" class=\"headerlink\" title=\"十六、Spring Boot与监控管理\"></a>十六、Spring Boot与监控管理</h3>","text":"[toc] Spring boot 2一、Boot入门SpringBoot2核心技术与响应式编程: https://www.yuque.com/atguigu/springboot 1、简介 简化Spring应用开发的一个框架； 整个Spring技术栈的一大整合； J2EE开发的...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/categories/SpringBoot.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"},{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Spring-boot-2\"><span class=\"toc-text\">Spring boot 2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81Boot%E5%85%A5%E9%97%A8\"><span class=\"toc-text\">一、Boot入门</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">1、简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%BE%AE%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">2、微服务</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3%E3%80%81%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">3、环境配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#4%E3%80%81Spring-Boot-HelloWorld\"><span class=\"toc-text\">4、Spring Boot HelloWorld</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-1-%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">4.1 初始化项目</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-2-%E7%BC%96%E5%86%99%E7%9B%B8%E5%85%B3%E7%9A%84Controller%E3%80%81Service\"><span class=\"toc-text\">4.2 编写相关的Controller、Service</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-3-%E6%89%93%E5%8C%85%E6%88%90%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%9A%84jar%E5%8C%85\"><span class=\"toc-text\">4.3 打包成可执行的jar包</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#5%E3%80%81%E6%8E%A2%E7%A9%B6Hello-World\"><span class=\"toc-text\">5、探究Hello World</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-1-POM%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">5.1 POM文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#5-1-1-%E7%88%B6%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">5.1.1 父项目</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#5-1-2-%E5%90%AF%E5%8A%A8%E5%99%A8\"><span class=\"toc-text\">5.1.2 启动器</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-2-%E4%B8%BB%E7%A8%8B%E5%BA%8F%E7%B1%BB%EF%BC%8C%E4%B8%BB%E5%85%A5%E5%8F%A3%E7%B1%BB\"><span class=\"toc-text\">5.2 主程序类，主入口类</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#6%E3%80%81%E4%BD%BF%E7%94%A8Spring-Initializer%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BASpring-Boot%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">6、使用Spring Initializer快速创建Spring Boot项目</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81Spring-Boot%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">二、Spring Boot配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">2.1 配置文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2%E3%80%81YAML%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">2.2、YAML语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">2.2.1 基本语法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-2-2-%E5%80%BC%E7%9A%84%E5%86%99%E6%B3%95\"><span class=\"toc-text\">2.2.2 值的写法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E5%AD%97%E9%9D%A2%E9%87%8F%EF%B8%B0%E6%99%AE%E9%80%9A%E7%9A%84%E5%80%BC%EF%BC%88%E6%95%B0%E5%AD%97%EF%BC%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%EF%BC%8C%E5%B8%83%E5%B0%94\"><span class=\"toc-text\">字面量︰普通的值（数字，字符串，布尔)</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#2-2-3-%E5%AF%B9%E8%B1%A1%E3%80%81Map%EF%BC%88%E5%B1%9E%E6%80%A7%E5%92%8C%E5%80%BC%EF%BC%89%EF%BC%88%E9%94%AE%E5%80%BC%E5%AF%B9%EF%BC%89%EF%BC%9A\"><span class=\"toc-text\">2.2.3 对象、Map（属性和值）（键值对）：</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84%EF%BC%88List%E3%80%81Set%EF%BC%89\"><span class=\"toc-text\">数组（List、Set）:</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%80%BC%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">2.3 配置文件值注入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-3-1-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6-xx-yaml\"><span class=\"toc-text\">2.3.1 配置文件 xx.yaml</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-3-2%E4%BD%BF%E7%94%A8properties%EF%BC%8C%E5%85%B6%E4%BB%96%E9%85%8D%E7%BD%AE%E7%9B%B8%E5%90%8C%EF%BC%8Cproperties%E6%96%87%E4%BB%B6%E5%A6%82%E4%B8%8B\"><span class=\"toc-text\">2.3.2使用properties，其他配置相同，properties文件如下</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-3-3-Value%E8%8E%B7%E5%8F%96%E5%80%BC%E5%92%8C-ConfigurationProperties%E8%8E%B7%E5%8F%96%E5%80%BC%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">2.3.3 @Value获取值和@ConfigurationProperties获取值比较</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-3-4-PropertySource-amp-ImportResource\"><span class=\"toc-text\">2.3.4 @PropertySource&amp; @ImportResource</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-4%E3%80%81%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8D%A0%E4%BD%8D%E7%AC%A6\"><span class=\"toc-text\">2.4、配置文件占位符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-4-1%E3%80%81%E9%9A%8F%E6%9C%BA%E6%95%B0\"><span class=\"toc-text\">2.4.1、随机数</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-4-2%E3%80%81%E7%82%B9%E4%BD%8D%E7%AC%A6%E8%8E%B7%E5%8F%96%E4%B9%8B%E5%89%8D%E9%85%8D%E7%BD%AE%E7%9A%84%E5%80%BC%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%B2%A1%E6%9C%89%E5%8F%AF%E4%BB%A5%E7%94%A8%EF%BC%9A%E5%8F%B7%E6%9D%A5%E6%8C%87%E5%AE%9A%E9%BB%98%E8%AE%A4%E5%80%BC\"><span class=\"toc-text\">2.4.2、点位符获取之前配置的值，如果没有可以用：号来指定默认值</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-5%E3%80%81Profile-%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%EF%BC%8C%E6%AD%A3%E5%BC%8F%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.5、Profile,测试环境，正式环境配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-5-1%E3%80%81%E5%A4%9AProfile%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">2.5.1、多Profile文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-5-2%E3%80%81yml%E6%94%AF%E6%8C%81%E5%A4%9A%E6%96%87%E6%A1%A3%E5%9D%97%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">2.5.2、yml支持多文档块方式</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-5-3%E3%80%81%E6%BF%80%E6%B4%BB%E6%8C%87%E5%AE%9Aprofile\"><span class=\"toc-text\">2.5.3、激活指定profile</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-6%E3%80%81%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BD%E4%BD%8D%E7%BD%AE\"><span class=\"toc-text\">2.6、配置文件加载位置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-7%E3%80%81%E5%A4%96%E9%83%A8%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F\"><span class=\"toc-text\">2.7、外部配置加载顺序</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-8%E3%80%81%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">2.8、自动配置原理</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81Spring-Boot%E4%B8%8E%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">三、Spring Boot与日志</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81Spring-Boot%E4%B8%8EWeb%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">四、Spring Boot与Web开发</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81Spring-Boot%E4%B8%8EDocker\"><span class=\"toc-text\">五、Spring Boot与Docker</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81Spring-Boot%E4%B8%8E%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE\"><span class=\"toc-text\">六、Spring Boot与数据访问</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81Spring-Boot%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">七、Spring Boot启动配置原理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%AB%E3%80%81Spring-Boot%E8%87%AA%E5%AE%9A%E4%B9%89starters\"><span class=\"toc-text\">八、Spring Boot自定义starters</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B9%9D%E3%80%81Spring-Boot%E4%B8%8E%E7%BC%93%E5%AD%98\"><span class=\"toc-text\">九、Spring Boot与缓存</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%81%E3%80%81Spring-Boot%E4%B8%8E%E6%B6%88%E6%81%AF\"><span class=\"toc-text\">十、Spring Boot与消息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%B8%80%E3%80%81Spring-Boot%E4%B8%8E%E6%A3%80%E7%B4%A2\"><span class=\"toc-text\">十一、Spring Boot与检索</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%BA%8C%E3%80%81Spring-Boot%E4%B8%8E%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">十二、Spring Boot与任务</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%B8%89%E3%80%81Spring-Boot%E4%B8%8E%E5%AE%89%E5%85%A8\"><span class=\"toc-text\">十三、Spring Boot与安全</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%81%E5%9B%9B%E3%80%81Spring-Boot%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F\"><span class=\"toc-text\">十四、Spring Boot与分布式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%81%E4%BA%94%E3%80%81Spring-Boot%E4%B8%8E%E5%BC%80%E5%8F%91%E7%83%AD%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">十五、Spring Boot与开发热部署</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%81%E5%85%AD%E3%80%81Spring-Boot%E4%B8%8E%E7%9B%91%E6%8E%A7%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">十六、Spring Boot与监控管理</span></a></li></ol></li></ol></li></ol>","author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"mapped":true,"prev_post":{"title":"141环形链表","uid":"b83bcf954408510a4198091631a0eef0","slug":"141环形链表","date":"2021-06-05T02:35:31.000Z","updated":"2021-06-05T02:41:01.896Z","comments":true,"path":"api/articles/141环形链表.json","keywords":null,"cover":"/images/banners/VCG41186545379.jpg","text":"给定一个链表，判断链表中是否有环。如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 pos 是 -1，则在该链表中没有环。注意：pos 不作为...","link":"","photos":[],"count_time":{"symbolsCount":815,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":15,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":14,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":15,"path":"api/tags/Python.json"},{"name":"链表","slug":"链表","count":2,"path":"api/tags/链表.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}},"next_post":{"title":"92反转链表","uid":"6b52f6e39f338d64bbb358fbefb34421","slug":"92反转链表","date":"2021-05-28T13:33:34.000Z","updated":"2021-08-10T06:41:53.505Z","comments":true,"path":"api/articles/92反转链表.json","keywords":null,"cover":"/images/banners/VCG211309273419.jpg","text":"给你单链表的头指针 head 和两个整数 left 和 right ，其中 left &lt;= right 。请你反转从位置 left 到位置 right 的链表节点，返回 反转后的链表 输入：head = [1,2,3,4,5], left = 2, right = 4输出：...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":15,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":14,"path":"api/tags/算法.json"},{"name":"Python - 链表","slug":"Python-链表","count":1,"path":"api/tags/Python-链表.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}}}}