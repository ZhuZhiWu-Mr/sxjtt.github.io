[{"title":"蒙特卡洛树搜索MCTS","uid":"e4486b46c423239be00f208745edcc94","slug":"蒙特卡洛树搜索","date":"2021-08-03T02:56:38.000Z","updated":"2021-08-03T03:35:57.812Z","comments":true,"path":"api/articles/蒙特卡洛树搜索.json","cover":"/images/banners/VCG41N1070447322.jpg","text":"1、蒙特卡洛树搜索（The Monte Carlo Tree Search） 蒙特卡罗树搜索是一类树搜索算法的统称，简称MCTS。它是一种用于某些决策过程的启发搜索算法，且在搜索空间巨大的游戏中会比较有效。 从全局来看，蒙特卡洛树搜索的主要目标是：给定一个游戏状态来选择最佳的下一...","link":"","photos":[],"count_time":{"symbolsCount":529,"symbolsTime":"1 mins."},"categories":[{"name":"算法","slug":"算法","count":12,"path":"api/categories/算法.json"}],"tags":[{"name":"算法","slug":"算法","count":11,"path":"api/tags/算法.json"},{"name":"Python","slug":"Python","count":13,"path":"api/tags/Python.json"},{"name":"MCTS","slug":"MCTS","count":1,"path":"api/tags/MCTS.json"}],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"feature":true},{"title":"Python多进程与多线程","uid":"b2c2bb855d265e670ce1f297fc82a024","slug":"Python多进程与多线程","date":"2021-06-24T04:40:25.000Z","updated":"2021-06-25T03:49:40.794Z","comments":true,"path":"api/articles/Python多进程与多线程.json","cover":[],"text":"一、多进程1.1 进程的创建步骤 导入进程包 import multiprocessing 通过进程类创建进程对象 进程对象 = multiprocessing.Process() 启动进程执行任务 进程对象.start() 1.2 通过进程类创建进程对象进程对象 = multi...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[],"tags":[],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"feature":true},{"title":"Python并发编程实战","uid":"c96a29bb0267b75e1f4b13b4bcd3675a","slug":"Python并发编程实战","date":"2021-06-19T12:13:33.000Z","updated":"2021-06-19T12:19:26.868Z","comments":true,"path":"api/articles/Python并发编程实战.json","cover":null,"text":"Python并发编程实战一、什么是CPU密集型计算、IO密集型计算？CPU密集型（CPU-bound）: CPU密集型也叫计算密集型，是指I/O在很短的时间就可以完成，CPU需要大量的计算和处理，特点是CPU占用率相当高 例如：压缩解压缩、加密解密、正则表达式搜索； IO密集型（...","link":"","photos":[],"count_time":{"symbolsCount":232,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"阿朱","slug":"blog-author","avatar":"/images/head.jpg","link":"/","description":"所行皆坦途","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/382729258"},"github":{"icon":"/svg/github.svg","link":"https://github.com/sxjtt"}}}},"feature":true}]